// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/chenmuyao/go-bootcamp/interactive/grpc"
	"github.com/chenmuyao/go-bootcamp/interactive/repository"
	"github.com/chenmuyao/go-bootcamp/interactive/repository/cache/rediscache"
	"github.com/chenmuyao/go-bootcamp/interactive/repository/dao"
	"github.com/chenmuyao/go-bootcamp/interactive/service"
	"github.com/chenmuyao/go-bootcamp/ioc"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitInteractiveService() *grpc.InteractiveServiceServer {
	logger := InitLogger()
	db := InitDB()
	interactiveDAO := dao.NewGORMInteractiveDAO(db)
	cmdable := InitRedis()
	interactiveCache := rediscache.NewInteractiveRedisCache(cmdable)
	topArticlesCache := ioc.InitTopArticlesCache()
	interactiveRepository := repository.NewCachedInteractiveRepository(logger, interactiveDAO, interactiveCache, topArticlesCache)
	interactiveService := service.NewInteractiveService(interactiveRepository)
	interactiveServiceServer := grpc.NewInteractiveServiceServer(interactiveService)
	return interactiveServiceServer
}

// wire.go:

var thirdPartySet = wire.NewSet(
	InitRedis,
	InitDB,
	InitLogger,
	InitSaramaClient,
)

var interactiveSvcSet = wire.NewSet(dao.NewGORMInteractiveDAO, rediscache.NewInteractiveRedisCache, ioc.InitTopArticlesCache, repository.NewCachedInteractiveRepository, service.NewInteractiveService)
